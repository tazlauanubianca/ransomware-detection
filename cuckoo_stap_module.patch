--- analyzer/linux/modules/auxiliary/stap.py	2021-08-28 22:15:15.534235000 +0200
+++ analyzer/linux/modules/auxiliary/stap.py	2021-08-28 23:14:20.000000000 +0200
@@ -23,33 +23,6 @@
 
     def start(self):
         # helper function locating the stap module
-        def has_stap(p):
-            only_stap = [fn for fn in os.listdir(p) if fn.startswith("stap_") and fn.endswith(".ko")]
-            if only_stap: return os.path.join(p, only_stap[0])
-            return False
-
-        path_cfg = self.config.get("analyzer_stap_path", None)
-        if path_cfg and os.path.exists(path_cfg):
-            path = path_cfg
-        elif os.path.exists("/root/.cuckoo") and has_stap("/root/.cuckoo"):
-            path = has_stap("/root/.cuckoo")
-        else:
-            log.warning("Could not find STAP LKM, aborting systemtap analysis.")
-            return False
-
-        stap_start = time.time()
-        self.proc = subprocess.Popen([
-            "staprun", "-vv",
-            "-x", str(os.getpid()),
-            "-o", "stap.log",
-            path,
-        ], stderr=subprocess.PIPE)
-
-        while "systemtap_module_init() returned 0" not in self.proc.stderr.readline():
-            pass
-
-        stap_stop = time.time()
-        log.info("STAP aux module startup took %.2f seconds" % (stap_stop - stap_start))
         return True
 
     @staticmethod
@@ -69,4 +42,4 @@
         except Exception as e:
             log.warning("Exception killing stap: %s", e)
 
-        self._upload_file("stap.log", "logs/all.stap")
+        self._upload_file("/tmp/strace.log", "logs/all.strace")

